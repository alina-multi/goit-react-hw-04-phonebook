{"ast":null,"code":"var _jsxFileName = \"/Users/alinamulti/Desktop/react_hw/goit-react-hw-04-phonebook/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // import { FormEvent } from 'react';\n\nimport ContactList from './ContactList/ContactList';\nimport Basic from './Form/Form';\nimport Filter from \"./Filter/Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst user = [{\n  id: 'id-1',\n  name: 'Rosie Simpson',\n  number: '459-12-56'\n}, {\n  id: 'id-2',\n  name: 'Hermione Kline',\n  number: '443-89-12'\n}, {\n  id: 'id-3',\n  name: 'Eden Clements',\n  number: '645-17-79'\n}, {\n  id: 'id-4',\n  name: 'Annie Copeland',\n  number: '227-91-26'\n}];\nexport const App = () => {\n  _s();\n\n  const [contacts, setContacts] = useState(user);\n  const [filter, setFilter] = useState(\"\");\n\n  const setNewContact = newContact => {\n    const isMatch = contacts.find(contact => contact.name === newContact.name);\n\n    if (isMatch) {\n      alert(`${newContact.name} is alredy in contacts`);\n      return;\n    }\n\n    setContacts([newContact, ...contacts]);\n  };\n\n  const handleFilter = e => {\n    const {\n      value,\n      name\n    } = e.currentTarget;\n    console.log(value);\n    console.log(name); // this.setState(\n    //    {\n    //      [name]: value\n    //    }\n    //  );\n\n    contactsFilter();\n  };\n\n  const contactsFilter = () => {\n    const filterNirmilized = filter.toLocaleLowerCase();\n    const visibleArray = contacts.filter(contact => contact.name.toLowerCase().includes(filterNirmilized));\n    return visibleArray;\n  };\n\n  const onDeleteButton = contactID => {\n    //  this.setState((prevState) => ({ contacts: prevState.contacts.filter(contact => contact.id !== contactID) }))\n    setContacts(contacts.filter(contact => contact.id !== contactID));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Basic, {\n      setNewContact: setNewContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      contacts: contacts,\n      filter: filter,\n      onChange: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      visibleContacts: contactsFilter,\n      onDeleteButton: onDeleteButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 20\n  }, this);\n}; //  export class App extends Component { \n//  state = {\n//    contacts: [\n//     {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n//     {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n//     {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n//     {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n//   ],\n//   filter: '',\n//  }\n//  setNewContact = (newContact)=>{\n//   this.setState({ contacts: [newContact, ...this.state.contacts] });\n//   const isMatch = this.state.contacts.find(contact => contact.name === newContact.name)\n//      if (isMatch) { \n//        alert(`${newContact.name} is alredy in contacts`);\n//        return;\n//      }\n//  }\n//    handleChange = e => { \n//      const { value, name } = e.currentTarget;\n//      this.setState(\n//        {\n//          [name]: value\n//        }\n//      );    \n//    }\n//    handleFilter = (e) => { \n//     const { value, name } = e.currentTarget;\n//     this.setState(\n//        {\n//          [name]: value\n//        }\n//      );\n//     this.contactsFilter();\n//    }\n//    contactsFilter = () => {\n//      const filterNirmilized = this.state.filter.toLocaleLowerCase();\n//      const visibleArray = this.state.contacts.filter(contact=> contact.name.toLowerCase().includes(filterNirmilized))\n//      return visibleArray;\n//    }\n//    onDeleteButton = (contactID) => {\n//      this.setState((prevState) => ({ contacts: prevState.contacts.filter(contact => contact.id !== contactID) }))\n//    }\n//   render() { \n//     return <div>\n//       <Basic setNewContact={this.setNewContact}/>\n//       <Filter contacts={this.state.contacts} filter={this.state.filter} onChange={this.handleFilter}/>\n//       <ContactList visibleContacts={this.contactsFilter} onDeleteButton={this.onDeleteButton}/>\n//     </div> \n//   }\n//  }\n\n_s(App, \"WuRTwieWOwHg87/LQMm1rqf/3No=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alinamulti/Desktop/react_hw/goit-react-hw-04-phonebook/src/components/App.jsx"],"names":["useState","ContactList","Basic","Filter","user","id","name","number","App","contacts","setContacts","filter","setFilter","setNewContact","newContact","isMatch","find","contact","alert","handleFilter","e","value","currentTarget","console","log","contactsFilter","filterNirmilized","toLocaleLowerCase","visibleArray","toLowerCase","includes","onDeleteButton","contactID"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n// import { FormEvent } from 'react';\nimport ContactList from './ContactList/ContactList';\nimport Basic from './Form/Form';\nimport Filter from \"./Filter/Filter\";\n\nconst user = [\n  {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n  {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n  {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n  {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n];\n\nexport const App = () => {\n  const [contacts, setContacts] = useState(user);\n  const [filter, setFilter] = useState(\"\");\n\n  const setNewContact = (newContact)=>{\n    const isMatch = contacts.find(contact => contact.name === newContact.name)\n        \n         if (isMatch) { \n           alert(`${newContact.name} is alredy in contacts`);\n           return;\n         }\n         setContacts([newContact, ...contacts]);\n}\n\n    const handleFilter = (e) => { \n    const { value, name } = e.currentTarget;\n    console.log(value);\n    console.log(name);\n    // this.setState(\n    //    {\n    //      [name]: value\n    //    }\n    //  );\n  \n    contactsFilter();\n  \n   }\n\n   const contactsFilter = () => {\n         const filterNirmilized = filter.toLocaleLowerCase();\n         const visibleArray = contacts.filter(contact=> contact.name.toLowerCase().includes(filterNirmilized))\n         return visibleArray;\n       \n       }\n     const onDeleteButton = (contactID) => {\n            //  this.setState((prevState) => ({ contacts: prevState.contacts.filter(contact => contact.id !== contactID) }))\n            setContacts(contacts.filter(contact => contact.id !== contactID)) }\n\n            return <div>\n        <Basic setNewContact={setNewContact}/>\n        <Filter contacts={contacts} filter={filter} onChange={handleFilter}/>\n        <ContactList visibleContacts={contactsFilter} onDeleteButton={onDeleteButton}/>\n      </div> \n           \n           \n\n\n}\n//  export class App extends Component { \n//  state = {\n//    contacts: [\n//     {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n//     {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n//     {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n//     {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n//   ],\n//   filter: '',\n  \n//  }\n\n//  setNewContact = (newContact)=>{\n\n//   this.setState({ contacts: [newContact, ...this.state.contacts] });\n//   const isMatch = this.state.contacts.find(contact => contact.name === newContact.name)\n    \n//      if (isMatch) { \n//        alert(`${newContact.name} is alredy in contacts`);\n//        return;\n//      }\n\n\n\n//  }\n   \n//    handleChange = e => { \n//      const { value, name } = e.currentTarget;\n//      this.setState(\n//        {\n//          [name]: value\n//        }\n//      );    \n//    }\n\n\n//    handleFilter = (e) => { \n//     const { value, name } = e.currentTarget;\n//     this.setState(\n//        {\n//          [name]: value\n//        }\n//      );\n  \n//     this.contactsFilter();\n  \n//    }\n\n//    contactsFilter = () => {\n//      const filterNirmilized = this.state.filter.toLocaleLowerCase();\n//      const visibleArray = this.state.contacts.filter(contact=> contact.name.toLowerCase().includes(filterNirmilized))\n//      return visibleArray;\n   \n//    }\n\n//    onDeleteButton = (contactID) => {\n//      this.setState((prevState) => ({ contacts: prevState.contacts.filter(contact => contact.id !== contactID) }))\n   \n//    }\n\n\n\n//   render() { \n//     return <div>\n//       <Basic setNewContact={this.setNewContact}/>\n//       <Filter contacts={this.state.contacts} filter={this.state.filter} onChange={this.handleFilter}/>\n//       <ContactList visibleContacts={this.contactsFilter} onDeleteButton={this.onDeleteButton}/>\n//     </div> \n//   }\n   \n  \n    \n//  }\n\n"]},"metadata":{},"sourceType":"module"}