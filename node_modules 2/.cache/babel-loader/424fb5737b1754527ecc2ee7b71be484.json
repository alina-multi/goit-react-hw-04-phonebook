{"ast":null,"code":"var _jsxFileName = \"/Users/alinamulti/Desktop/react_hw/goit-react-hw-04-phonebook/src/stories/Button.jsx\";\nimport React from 'react'; // \n\nimport './button.css';\n/**\n * Primary UI component for user interaction\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = _ref => {\n  let {\n    primary,\n    backgroundColor,\n    size,\n    label,\n    ...props\n  } = _ref;\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: ['storybook-button', `storybook-button--${size}`, mode].join(' '),\n    style: backgroundColor && {\n      backgroundColor\n    },\n    ...props,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}; // Button.propTypes = {\n//   /**\n//    * Is this the principal call to action on the page?\n//    */\n//   primary: PropTypes.bool,\n//   /**\n//    * What background color to use\n//    */\n//   backgroundColor: PropTypes.string,\n//   /**\n//    * How large should the button be?\n//    */\n//   size: PropTypes.oneOf(['small', 'medium', 'large']),\n//   /**\n//    * Button contents\n//    */\n//   label: PropTypes.string.isRequired,\n//   /**\n//    * Optional click handler\n//    */\n//   onClick: PropTypes.func,\n// };\n\n_c = Button;\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: false,\n  size: 'medium',\n  onClick: undefined\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");\nButton.__docgenInfo = {\n  \"description\": \"Primary UI component for user interaction\",\n  \"methods\": [],\n  \"displayName\": \"Button\",\n  \"props\": {\n    \"backgroundColor\": {\n      \"defaultValue\": {\n        \"value\": \"null\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"primary\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"'medium'\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"onClick\": {\n      \"defaultValue\": {\n        \"value\": \"undefined\",\n        \"computed\": true\n      },\n      \"required\": false\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/stories/Button.jsx\"] = {\n    name: \"Button\",\n    docgenInfo: Button.__docgenInfo,\n    path: \"src/stories/Button.jsx\"\n  };\n}","map":{"version":3,"sources":["/Users/alinamulti/Desktop/react_hw/goit-react-hw-04-phonebook/src/stories/Button.jsx"],"names":["React","Button","primary","backgroundColor","size","label","props","mode","join","defaultProps","onClick","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,cAAP;AAEA;AACA;AACA;;;AACA,OAAO,MAAMC,MAAM,GAAG,QAAyD;AAAA,MAAxD;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,eAAX;AAA4BC,IAAAA,IAA5B;AAAkCC,IAAAA,KAAlC;AAAyC,OAAGC;AAA5C,GAAwD;AAC7E,QAAMC,IAAI,GAAGL,OAAO,GAAG,2BAAH,GAAiC,6BAArD;AACA,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAE,CAAC,kBAAD,EAAsB,qBAAoBE,IAAK,EAA/C,EAAkDG,IAAlD,EAAwDC,IAAxD,CAA6D,GAA7D,CAFb;AAGE,IAAA,KAAK,EAAEL,eAAe,IAAI;AAAEA,MAAAA;AAAF,KAH5B;AAAA,OAIMG,KAJN;AAAA,cAMGD;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAZM,C,CAcP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAnCaJ,M;AAqCbA,MAAM,CAACQ,YAAP,GAAsB;AACpBN,EAAAA,eAAe,EAAE,IADG;AAEpBD,EAAAA,OAAO,EAAE,KAFW;AAGpBE,EAAAA,IAAI,EAAE,QAHc;AAIpBM,EAAAA,OAAO,EAAEC;AAJW,CAAtB","sourcesContent":["import React from 'react';\n// \nimport './button.css';\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = ({ primary, backgroundColor, size, label, ...props }) => {\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  return (\n    <button\n      type=\"button\"\n      className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\n      style={backgroundColor && { backgroundColor }}\n      {...props}\n    >\n      {label}\n    </button>\n  );\n};\n\n// Button.propTypes = {\n//   /**\n//    * Is this the principal call to action on the page?\n//    */\n//   primary: PropTypes.bool,\n//   /**\n//    * What background color to use\n//    */\n//   backgroundColor: PropTypes.string,\n//   /**\n//    * How large should the button be?\n//    */\n//   size: PropTypes.oneOf(['small', 'medium', 'large']),\n//   /**\n//    * Button contents\n//    */\n//   label: PropTypes.string.isRequired,\n//   /**\n//    * Optional click handler\n//    */\n//   onClick: PropTypes.func,\n// };\n\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: false,\n  size: 'medium',\n  onClick: undefined,\n};\n"]},"metadata":{},"sourceType":"module"}