{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { Component } from \"react\"; // import { FormEvent } from 'react';\n\nimport ContactList from './ContactList/ContactList';\nimport Basic from './Form/Form';\nimport Filter from \"./Filter/Filter\";\nconst user = [{\n  id: 'id-1',\n  name: 'Rosie Simpson',\n  number: '459-12-56'\n}, {\n  id: 'id-2',\n  name: 'Hermione Kline',\n  number: '443-89-12'\n}, {\n  id: 'id-3',\n  name: 'Eden Clements',\n  number: '645-17-79'\n}, {\n  id: 'id-4',\n  name: 'Annie Copeland',\n  number: '227-91-26'\n}];\nexport const App = () => {\n  _s();\n\n  const [contacts, setContacts] = useState(user);\n  const [filter, setfilter] = useState(\"\");\n\n  const setNewContact = newContact => {\n    const isMatch = contacts.find(contact => contact.name === newContact.name);\n\n    if (isMatch) {\n      alert(`${newContact.name} is alredy in contacts`);\n      return;\n    }\n\n    setContacts([newContact, ...contacts]);\n  };\n}; //  export class App extends Component { \n//  state = {\n//    contacts: [\n//     {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n//     {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n//     {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n//     {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n//   ],\n//   filter: '',\n//  }\n//  setNewContact = (newContact)=>{\n//   this.setState({ contacts: [newContact, ...this.state.contacts] });\n//   const isMatch = this.state.contacts.find(contact => contact.name === newContact.name)\n//      if (isMatch) { \n//        alert(`${newContact.name} is alredy in contacts`);\n//        return;\n//      }\n//  }\n//    handleChange = e => { \n//      const { value, name } = e.currentTarget;\n//      this.setState(\n//        {\n//          [name]: value\n//        }\n//      );    \n//    }\n//    handleFilter = (e) => { \n//     const { value, name } = e.currentTarget;\n//     this.setState(\n//        {\n//          [name]: value\n//        }\n//      );\n//     this.contactsFilter();\n//    }\n//    contactsFilter = () => {\n//      const filterNirmilized = this.state.filter.toLocaleLowerCase();\n//      const visibleArray = this.state.contacts.filter(contact=> contact.name.toLowerCase().includes(filterNirmilized))\n//      return visibleArray;\n//    }\n//    onDeleteButton = (contactID) => {\n//      this.setState((prevState) => ({ contacts: prevState.contacts.filter(contact => contact.id !== contactID) }))\n//    }\n//   render() { \n//     return <div>\n//       <Basic setNewContact={this.setNewContact}/>\n//       <Filter contacts={this.state.contacts} filter={this.state.filter} onChange={this.handleFilter}/>\n//       <ContactList visibleContacts={this.contactsFilter} onDeleteButton={this.onDeleteButton}/>\n//     </div> \n//   }\n//  }\n\n_s(App, \"HAmCohKYPUXnqqsUsL0y4l2qw6w=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alinamulti/Desktop/react_hw/goit-react-hw-04-phonebook/src/components/App.jsx"],"names":["Component","ContactList","Basic","Filter","user","id","name","number","App","contacts","setContacts","useState","filter","setfilter","setNewContact","newContact","isMatch","find","contact","alert"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,IAAI,GAAG,CACX;AAACC,EAAAA,EAAE,EAAE,MAAL;AAAaC,EAAAA,IAAI,EAAE,eAAnB;AAAoCC,EAAAA,MAAM,EAAE;AAA5C,CADW,EAEX;AAACF,EAAAA,EAAE,EAAE,MAAL;AAAaC,EAAAA,IAAI,EAAE,gBAAnB;AAAqCC,EAAAA,MAAM,EAAE;AAA7C,CAFW,EAGX;AAACF,EAAAA,EAAE,EAAE,MAAL;AAAaC,EAAAA,IAAI,EAAE,eAAnB;AAAoCC,EAAAA,MAAM,EAAE;AAA5C,CAHW,EAIX;AAACF,EAAAA,EAAE,EAAE,MAAL;AAAaC,EAAAA,IAAI,EAAE,gBAAnB;AAAqCC,EAAAA,MAAM,EAAE;AAA7C,CAJW,CAAb;AAOA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAACP,IAAD,CAAxC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBF,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMG,aAAa,GAAIC,UAAD,IAAc;AAClC,UAAMC,OAAO,GAAGP,QAAQ,CAACQ,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACZ,IAAR,KAAiBS,UAAU,CAACT,IAArD,CAAhB;;AAEK,QAAIU,OAAJ,EAAa;AACXG,MAAAA,KAAK,CAAE,GAAEJ,UAAU,CAACT,IAAK,wBAApB,CAAL;AACA;AACD;;AAGDI,IAAAA,WAAW,CAAC,CAACK,UAAD,EAAa,GAAGN,QAAhB,CAAD,CAAX;AACR,GAVC;AAWD,CAfM,C,CAgBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;GAxFaD,G;;KAAAA,G","sourcesContent":["import { Component } from \"react\";\n// import { FormEvent } from 'react';\nimport ContactList from './ContactList/ContactList';\nimport Basic from './Form/Form';\nimport Filter from \"./Filter/Filter\";\n\nconst user = [\n  {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n  {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n  {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n  {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n];\n\nexport const App = () => {\n  const [contacts, setContacts] = useState(user);\n  const [filter, setfilter] = useState(\"\");\n\n  const setNewContact = (newContact)=>{\n    const isMatch = contacts.find(contact => contact.name === newContact.name)\n        \n         if (isMatch) { \n           alert(`${newContact.name} is alredy in contacts`);\n           return;\n         }\n         \n\n         setContacts([newContact, ...contacts]);\n}\n}\n//  export class App extends Component { \n//  state = {\n//    contacts: [\n//     {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n//     {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n//     {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n//     {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n//   ],\n//   filter: '',\n  \n//  }\n\n//  setNewContact = (newContact)=>{\n\n//   this.setState({ contacts: [newContact, ...this.state.contacts] });\n//   const isMatch = this.state.contacts.find(contact => contact.name === newContact.name)\n    \n//      if (isMatch) { \n//        alert(`${newContact.name} is alredy in contacts`);\n//        return;\n//      }\n\n\n\n//  }\n   \n//    handleChange = e => { \n//      const { value, name } = e.currentTarget;\n//      this.setState(\n//        {\n//          [name]: value\n//        }\n//      );    \n//    }\n\n\n//    handleFilter = (e) => { \n//     const { value, name } = e.currentTarget;\n//     this.setState(\n//        {\n//          [name]: value\n//        }\n//      );\n  \n//     this.contactsFilter();\n  \n//    }\n\n//    contactsFilter = () => {\n//      const filterNirmilized = this.state.filter.toLocaleLowerCase();\n//      const visibleArray = this.state.contacts.filter(contact=> contact.name.toLowerCase().includes(filterNirmilized))\n//      return visibleArray;\n   \n//    }\n\n//    onDeleteButton = (contactID) => {\n//      this.setState((prevState) => ({ contacts: prevState.contacts.filter(contact => contact.id !== contactID) }))\n   \n//    }\n\n\n\n//   render() { \n//     return <div>\n//       <Basic setNewContact={this.setNewContact}/>\n//       <Filter contacts={this.state.contacts} filter={this.state.filter} onChange={this.handleFilter}/>\n//       <ContactList visibleContacts={this.contactsFilter} onDeleteButton={this.onDeleteButton}/>\n//     </div> \n//   }\n   \n  \n    \n//  }\n\n"]},"metadata":{},"sourceType":"module"}